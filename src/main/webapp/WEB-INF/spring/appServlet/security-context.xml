<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<http auto-config="true" use-expressions="true">
	
		<intercept-url pattern="/settings/*" access="hasRole('ROLE_ADMIN')" /> 
		<intercept-url pattern="/*" access="permitAll()" />
		 
		 <!-- return boolean -->
		<form-login login-page="/member/login"	login-processing-url="/j_spring_security_check"
					authentication-failure-url="/member/login?fail=true" 
					username-parameter="email" password-parameter="password" />		

		<logout logout-success-url="/" logout-url="/j_spring_security_logout" invalidate-session="true" delete-cookies="JSESSIONID"/>
		<csrf disabled="true"/>
	</http>
	
	<authentication-manager>
		<authentication-provider>
<!-- 			<user-service>
				<user name="user@aa" password="user" authorities="ROLE_USER" />
				<user name="admin@aa" password="admin" authorities="ROLE_ADMIN" /> 
			</user-service> -->
  		<jdbc-user-service data-source-ref="dataSource"	
		users-by-username-query="select MEMBER_SEQ as username, MEMBER_PW as password, 1 as enable
								from MEMBER
								where MEMBER_ID = ?"
		authorities-by-username-query="select m.MEMBER_SEQ as username, a.AUT_NAME as authority
									from MEM_AUT_REL m, AUTHORITY a
									where m.AUT_SEQ = a.AUT_SEQ and m.MEMBER_SEQ = ?"/> 
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>